{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItems.js","Components/GifGrid.js","hooks/getFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","required","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized","title","console","log","GifGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","GetFetchGifs","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"8KAIaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAEJC,mBAAS,IAFL,mBAElCC,EAFkC,KAEtBC,EAFsB,KAgB1C,OACI,sBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC7BR,EAAY,CAAEE,IACdC,EAAc,MAKb,SACI,uBACCM,KAAK,OACLC,MAAQR,EACRS,SAjBiB,SAAEN,GACxBF,EAAeE,EAAEO,OAAOF,QAiBnBG,UAAQ,O,8BCxBRC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEAGTC,EAHS,gDAGuCC,UAAUH,GAHjD,+DAIJI,MAAOF,GAJH,cAIjBG,EAJiB,gBAKFA,EAAKC,OALH,uBAKhBC,EALgB,EAKhBA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRT,IAAKQ,EAAIE,OAAOC,UAAUX,IAC1BY,MAAOJ,EAAII,UAXI,kBAcTN,GAdS,kCAgBfO,QAAQC,IAAI,8BAhBG,0DAAH,sDCAPC,EAAe,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOZ,EAAW,EAAXA,IACnC,OACI,sBAAKgB,UAAU,yCAAf,UACG,qBAAKC,IAAMjB,EAAMkB,IAAMN,IACvB,kCAAMA,EAAN,WCFEO,EAAU,SAAC,GAAoB,IAAjBrB,EAAgB,EAAhBA,SAAgB,ECAf,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAW,WACH1B,EAASC,GACR0B,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBjB,KAAMoB,EACNL,SAAS,SAElB,CAAEtB,IAEEuB,EDZmBK,CAAc5B,GAAhCO,EAF+B,EAE/BA,KAAMe,EAFyB,EAEzBA,QAEd,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDlB,EAApD,OAEEsB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEjB,qBAAKA,UAAU,YAAf,SAEUX,EAAKE,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAAkCA,GAAdA,EAAIC,aEbtCkB,EAAe,WAAO,IAAD,EAEQ3C,mBAAS,CAAC,cAFlB,mBAEtB4C,EAFsB,KAEVC,EAFU,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAa9C,YAAc8C,IAC3B,uBACA,6BAEQD,EAAWrB,KAAM,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCV/DgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a712bd11.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({setCategory}) => {\n\n    const [ inputValue, setInputValue ] = useState(\"\")\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value )\n    }\n\n    const HandleSubmit = ( e ) => {\n        e.preventDefault();\n       if (inputValue.trim().length>2) {\n       setCategory([ inputValue ]);\n       setInputValue(\"\");\n       }\n    }\n\n    return (\n        <form onSubmit={ HandleSubmit }>\n            <input\n             type=\"text\"\n             value={ inputValue }\n             onChange={ handleInputChange }\n             required\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired\n}\n","\n\nexport const GetGifs = async( category ) => {\n        \n    try {\n        const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=1CrnyKB7zhLVnoyiiWu7a6biqxBWHBUe`\nconst resp = await fetch( url );\nconst {data} = await resp.json();\n\nconst gifs = data.map( img => {\n    return {\n        id: img.id,\n        url: img.images.downsized.url,\n        title: img.title\n    }\n} )\n       return gifs;\n    } catch (error) {\n        console.log(\"No se pudo conectar al api\")\n    }\n}","import React from 'react'\n\nexport const GifGridItems = ( { title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n           <img src={ url } alt={ title } /> \n           <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { GetFetchGifs } from '../hooks/getFetchGifs';\nimport { GifGridItems } from './GifGridItems';\n\nexport const GifGrid = ( { category } ) => {\n    \n    const { data, loading } = GetFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\"> {category} </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p>  }\n\n        <div className=\"card-grid\">\n            \n                { data.map( img  => {\n                    return <GifGridItems key={ img.id } { ...img } />\n                }) } \n            \n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { GetGifs } from \"../helpers/getGifs\"\n\n\nexport const GetFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n            GetGifs( category )\n            .then( imgs => setState({\n                data: imgs,\n                loading: false\n            }) )\n    }, [ category ] )\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './Components/AddCategory';\nimport { GifGrid } from './Components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [ categories, setCategories ] = useState([\"One punch\"])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategory={ setCategories } />\n            <hr />\n            <ol>\n                {\n                    categories.map ( category => <GifGrid key={category} category={category} /> )\n                }\n            </ol>\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}